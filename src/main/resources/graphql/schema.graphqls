type User {
    id: Int!
    username: String!
    email: String!
    icon: String
    socialAccounts: [SocialAccount]
    passwordUser: PasswordUser
}

type PasswordUser {
    id: Int!
    user: User!
    password: String!
    verifiedEmail: Boolean
}

type SocialAccount {
    id: Int!
    user: User!
    provider: String!
    socialAccountId: String!
}

type Query {
    findAllUsers(skip: Int = 0, limit: Int = 10): [User]
}

type Mutation {
    registerPasswordUser(input: UserInput!): User
}

input UserInput {
    username: String!
    email: String!
    password: String!
}

