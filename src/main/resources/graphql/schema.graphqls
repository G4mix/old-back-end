type User {
    id: Int!
    username: String!
    email: String!
    icon: String
    passwordUser: PasswordUser
    userProfile: UserProfile
}

type PasswordUser {
    id: Int!
    user: User!
    verifiedEmail: Boolean
}

type Post {
    author: UserProfile!
    title: String!
    content: String!
}

type UserProfile {
    id: Int!
    user: User!
    posts: [Post]
}

type Query {
    findAllUsers(skip: Int = 0, limit: Int = 10): [User]
    findUserByUsername(username: String!): User
    findUserByEmail(email: String!): User
    findUserByToken: User
}

type Mutation {
    updateUser(input: PartialUserInput!): User
    deleteAccount: Boolean
}

input PartialUserInput {
    username: String
    icon: String
}

input PartialPostInput {
    title: String
    content: String
}